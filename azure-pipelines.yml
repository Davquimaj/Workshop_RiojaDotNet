variables:
  solution: '**/PostNetCoreNativo.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'

jobs:
- job: 'cpp'

  strategy:
    matrix:
      High Sierra:
        imageName: 'macos-10.13'
      Mojave:
        imageName: 'macos-10.14'
      Ubuntu:
        imageName: 'ubuntu-16.04'
      Visual Studio 2015:
        imageName: 'vs2015-win2012r2'
        generator: '-G "Visual Studio 14 2015" -A x64'
      Visual Studio 2017:
        imageName: 'vs2017-win2016'
        generator: '-G "Visual Studio 15 2017" -A x64'
      Visual Studio 2019:
        imageName: 'windows-2019'
        generator: '-G "Visual Studio 16 2019" -A x64'
        
  pool:
    vmImage: $(imageName)

  displayName: 'NetCore C++'
  
  steps:
  - checkout: self
    submodules: true

  - script: |
      cd "src/C++ Library"
      mkdir -p build
      cd build
      cmake  ./..
    displayName: 'Make'
    
  - script: |
      cd "src/C++ Library/build"
      cmake --build . --target --config $(buildConfiguration)
    displayName: 'Compile'
      
  - task: NuGetToolInstaller@0
  
  - task: DotNetCoreInstaller@0
    inputs:
      version: '2.2.103'
  
  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'
  
  - task: DotNetCoreCLI@2
    inputs:
      command: build
      projects: '$(solution)'
      arguments: '--configuration $(buildConfiguration)' 
  
  - task: CopyFiles@2
    displayName: 'Copia libreria nativa'
    inputs:
      SourceFolder: '"$(system.defaultworkingdirectory)/src/C++ Library/build"'
      Contents: '*'
      TargetFolder: '$(build.artifactstagingdirectory)'
    condition: succeededOrFailed()  
  
  - task: DotNetCoreCLI@2
    inputs:
      command: test
      projects: '$(test)'
      arguments: '--configuration $(buildConfiguration)' 